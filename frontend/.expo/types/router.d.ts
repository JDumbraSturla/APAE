/* eslint-disable */
import * as Router from 'expo-router';

export * from 'expo-router';

declare module 'expo-router' {
  export namespace ExpoRouter {
    export interface __routes<T extends string | object = string> {
      hrefInputParams: { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/modal`; params?: Router.UnknownInputParams; } | { pathname: `/../src/components/HelloWave`; params?: Router.UnknownInputParams; } | { pathname: `/../src/components/ThemedText`; params?: Router.UnknownInputParams; } | { pathname: `/../src/components/ThemedView`; params?: Router.UnknownInputParams; } | { pathname: `/../src/components/ParallaxScrollView`; params?: Router.UnknownInputParams; } | { pathname: `/../src/components/ui/icon-symbol.ios`; params?: Router.UnknownInputParams; } | { pathname: `/../src/components/ui/collapsible`; params?: Router.UnknownInputParams; } | { pathname: `/../src/components/ui/icon-symbol`; params?: Router.UnknownInputParams; } | { pathname: `/../components/themed-view`; params?: Router.UnknownInputParams; } | { pathname: `/../components/themed-text`; params?: Router.UnknownInputParams; } | { pathname: `/../components/parallax-scroll-view`; params?: Router.UnknownInputParams; } | { pathname: `/../components/hello-wave`; params?: Router.UnknownInputParams; } | { pathname: `/../components/haptic-tab`; params?: Router.UnknownInputParams; } | { pathname: `/../components/external-link`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/explore` | `/explore`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownInputParams; };
      hrefOutputParams: { pathname: Router.RelativePathString, params?: Router.UnknownOutputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownOutputParams } | { pathname: `/modal`; params?: Router.UnknownOutputParams; } | { pathname: `/../src/components/HelloWave`; params?: Router.UnknownOutputParams; } | { pathname: `/../src/components/ThemedText`; params?: Router.UnknownOutputParams; } | { pathname: `/../src/components/ThemedView`; params?: Router.UnknownOutputParams; } | { pathname: `/../src/components/ParallaxScrollView`; params?: Router.UnknownOutputParams; } | { pathname: `/../src/components/ui/icon-symbol.ios`; params?: Router.UnknownOutputParams; } | { pathname: `/../src/components/ui/collapsible`; params?: Router.UnknownOutputParams; } | { pathname: `/../src/components/ui/icon-symbol`; params?: Router.UnknownOutputParams; } | { pathname: `/../components/themed-view`; params?: Router.UnknownOutputParams; } | { pathname: `/../components/themed-text`; params?: Router.UnknownOutputParams; } | { pathname: `/../components/parallax-scroll-view`; params?: Router.UnknownOutputParams; } | { pathname: `/../components/hello-wave`; params?: Router.UnknownOutputParams; } | { pathname: `/../components/haptic-tab`; params?: Router.UnknownOutputParams; } | { pathname: `/../components/external-link`; params?: Router.UnknownOutputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/explore` | `/explore`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownOutputParams; };
      href: Router.RelativePathString | Router.ExternalPathString | `/modal${`?${string}` | `#${string}` | ''}` | `/../src/components/HelloWave${`?${string}` | `#${string}` | ''}` | `/../src/components/ThemedText${`?${string}` | `#${string}` | ''}` | `/../src/components/ThemedView${`?${string}` | `#${string}` | ''}` | `/../src/components/ParallaxScrollView${`?${string}` | `#${string}` | ''}` | `/../src/components/ui/icon-symbol.ios${`?${string}` | `#${string}` | ''}` | `/../src/components/ui/collapsible${`?${string}` | `#${string}` | ''}` | `/../src/components/ui/icon-symbol${`?${string}` | `#${string}` | ''}` | `/../components/themed-view${`?${string}` | `#${string}` | ''}` | `/../components/themed-text${`?${string}` | `#${string}` | ''}` | `/../components/parallax-scroll-view${`?${string}` | `#${string}` | ''}` | `/../components/hello-wave${`?${string}` | `#${string}` | ''}` | `/../components/haptic-tab${`?${string}` | `#${string}` | ''}` | `/../components/external-link${`?${string}` | `#${string}` | ''}` | `/_sitemap${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/explore${`?${string}` | `#${string}` | ''}` | `/explore${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}${`?${string}` | `#${string}` | ''}` | `/${`?${string}` | `#${string}` | ''}` | { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/modal`; params?: Router.UnknownInputParams; } | { pathname: `/../src/components/HelloWave`; params?: Router.UnknownInputParams; } | { pathname: `/../src/components/ThemedText`; params?: Router.UnknownInputParams; } | { pathname: `/../src/components/ThemedView`; params?: Router.UnknownInputParams; } | { pathname: `/../src/components/ParallaxScrollView`; params?: Router.UnknownInputParams; } | { pathname: `/../src/components/ui/icon-symbol.ios`; params?: Router.UnknownInputParams; } | { pathname: `/../src/components/ui/collapsible`; params?: Router.UnknownInputParams; } | { pathname: `/../src/components/ui/icon-symbol`; params?: Router.UnknownInputParams; } | { pathname: `/../components/themed-view`; params?: Router.UnknownInputParams; } | { pathname: `/../components/themed-text`; params?: Router.UnknownInputParams; } | { pathname: `/../components/parallax-scroll-view`; params?: Router.UnknownInputParams; } | { pathname: `/../components/hello-wave`; params?: Router.UnknownInputParams; } | { pathname: `/../components/haptic-tab`; params?: Router.UnknownInputParams; } | { pathname: `/../components/external-link`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/explore` | `/explore`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownInputParams; };
    }
  }
}
